package InterfazJL;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.LinkedList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import java.awt.FlowLayout;
import javax.swing.BoxLayout;
import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.RowSpec;

import prueba.ExternalCtrl;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;

public class Main extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private List<String> historial = leer();
	private List<ViewMainPanel> panel;
	private String nomFich = "/historial.txt";

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Main frame = new Main();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Main() {
		
		
		panel = new LinkedList<ViewMainPanel>();
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 616, 420);
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu mnOpt = new JMenu("File");
		menuBar.add(mnOpt);
		
		JMenu mnAbout = new JMenu("About");
		mnOpt.add(mnAbout);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new BorderLayout(0, 0));
		
		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		contentPane.add(tabbedPane);
		ViewMainPanel mainPanel = new ViewMainPanel("MySQL", "CONNECTED", historial);
		panel.add(mainPanel);
		ViewMainPanel mainPanel2 = new ViewMainPanel("MariaDB", "DISCONNECTED", historial);
		panel.add(mainPanel2);
		
		tabbedPane.addTab("Mysql DB", null, mainPanel, null);
		tabbedPane.addTab("MariaDB", null, mainPanel2, null);

		ActionListener bt = new Control(mainPanel, panel);
		ActionListener bt2 = new Control(mainPanel2, panel);
		mainPanel.controller(bt);
		mainPanel2.controller(bt2);
		this.pack();
	}
	
    public List<String> leer()
    {
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        List<String> hist= new LinkedList<String>();
        
        try {
			// Apertura del fichero y creacion de BufferedReader para poder
			// hacer una lectura comoda (disponer del metodo readLine()).
			archivo = new File (nomFich);
			fr = new FileReader (archivo);
			br = new BufferedReader(fr);
 
			// Lectura del fichero
			String linea;
			while((linea=br.readLine())!=null)
				hist.add(linea);
        }
        catch(Exception e){
           e.printStackTrace();
        }finally{
           // En el finally cerramos el fichero, para asegurarnos
           // que se cierra tanto si todo va bien como si salta 
           // una excepcion.
           try{
              if( null != fr ){
                 fr.close();
              }
           }catch (Exception e2){
              e2.printStackTrace();
           }
        }
        	return hist;
    }


}
